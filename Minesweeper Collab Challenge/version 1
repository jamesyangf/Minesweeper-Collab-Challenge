/* Set rows and columns and the size of each space on the gameBoard */
var rows = 10;
var cols = 10;
var spaceSize = 40;

/* Number of ships */
var NUMBER_SHIPS = 5;

/* The value each cell of the board contains when it is empty (no ship) */
var OPEN_WATER = 0;

/* GameBoard Pieces */
var CARRIER = 11;
var BATTLESHIP = 22;
var DESTROYER = 33;
var SUBMARINE = 44;
var PATROL_BOAT = 55;

/* Ship sizes - The number of position each ship takes on the board */
var SIZE_CARRIER = 5;
var SIZE_BATTLESHIP = 4;
var SIZE_DESTROYER = 3;
var SIZE_SUBMARINE = 3;
var SIZE_PATROL_BOAT = 2;

/* Possible shot outcomes passed as an int */
var MISS = 1;
var HIT = 2;
var SINK = 3;

/* Battleship game player-to-AI message through PubNub Pub/Sub */
var NEW_GAME = 100;
var SHOT_REQUEST = 101;
var SHOT_RESULT = 103;
var OPPONENT_SHOT = 104;
var GAME_OVER = 105;

var hitCount = 0;
var shotCount = 0;

//var uuid = PubNub.generateUUID();

var hitCountText = document.getElementById('hit_count');
var shotCountText = document.getElementById('shot_count');
var playerTurnText = document.getElementById('player_turn');

/* Instantiate PubNub */
var pubnub = new PubNub({
        publishKey: 'pub-c-30632ecf-d1bd-4190-8019-06cfc29f2a31',
        subscribeKey: 'sub-c-f3801f96-c893-11e6-bbe2-02ee2ddab7fe'
        //uuid : uuid
});

// Subscribe to the battleship_channel channel
pubnub.addListener({
    message: function(m){
        console.log(m.message.player);
        subBoard(m.message.r, m.message.c, m.message.e);
    }
    // presence: function(m) {
    // 	console.log(m);

    // 	console.log(m.uuid);
    // 	console.log(uuid);
    // 	console.log(m.occupancy);
    // 	if(m.uuid === uuid && m.action === 'join') {
    		
    // 	}

    // 	if(m.occupancy > 2) {
    // 		console.log("success");
    // 		startGame();
    // 	}
    // }
})

pubnub.subscribe({
    channels: ['battleship_channel'],
    withPresence: true
});

// pubnub.hereNow(
// 	{
// 		channels: ['battleship_channel'],
// 		includeState: true,
// 		includeUUIDs: true
// 	},
// 	function(status, response){
// 		console.log(response);
// 	}	
// );

// playerTurnText.addEventListener("click", publishPosition("James", "22"), false);

/* Get the gameBoard element from the HTML */
var gameBoardDiv = document.getElementById("gameBoard");
/* This function creates HTML space divs AND CSS size and position 
 * for the gameBoard div BUT not the actual color where we can fully 
 * visualize it. Only in the CSS can we do that and set Width and Height 
 * This initializes each space to be "Open Water"
 */
//function initBoard(rows, cols, spaceSize) {

	for(i = 0; i < rows; i++) {
		for(j = 0; j < cols; j++) {

			/* Creat a new div element for each space */
			var space = document.createElement("div");
			/* Add the newly created div(space) to the gameBoard div */
			gameBoardDiv.appendChild(space);

			/* Set each div element a unique id ex: "00"*/
			space.id = 's' + i + j;

			/* Set each cell's coordinates */
			var topAbsPosition = i * spaceSize;
			var leftAbsPosition = j * spaceSize;

			/* Use CSS absolute positioning to place each cell on the HTML */
			space.style.top = topAbsPosition + 'px';
			space.style.left = leftAbsPosition + 'px';

		}
	}
//} 

/* Call the initBoard method */ 
//gameBoardDiv = initBoard(rows, cols, spaceSize);

/* 2D array of the representation of the game board */
var gameBoard = [
	[0,0,11,11,11,11,11,0,0,0],
	[22,22,22,22,0,0,0,0,0,0],
	[33,33,33,0,0,0,0,0,0,0],
	[44,44,44,0,0,0,0,0,0,0],
	[55,55,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0],
	[0,0,0,0,0,0,0,0,0,0]
]


/* Set an event listener for all element in the gameBoardDiv
 * Run the shoot function when a space is clicked
 */

gameBoardDiv.addEventListener("click", shoot, false);


function shoot(e) {

	//if(e.target !== e.currentTarget) {
		/* The row and col of the space is the id of the space clicked */
		var row = e.target.id.substring(1,2);
		var col = e.target.id.substring(2,3);

		//publish here
		pubnub.publish({
			channel: 'battleship_channel',
		    message: {
		        player : "James",
		        r : row,
		    	c : col,
		    	e : 's' + row + col
		    },
		    callback: function(m) {
		    	console.log(m);
		    }
		});
}

function subBoard(row, col, id) {
	console.log(row);
	console.log(col);
	shotCount++;
	shotCountText.innerHTML = shotCount;
	var e = document.getElementById(id);

	/* If player clicks on Open Water, change color and space value */
	if(gameBoard[row][col] == 0) {
		e.style.background = '#f6f8f9';
		/* Set the spece value to 1 to indicate MISS */
		gameBoard[row][col] = 1;
	}
	else if(gameBoard[row][col] == 11 || gameBoard[row][col] == 22 ||
		gameBoard[row][col] == 33 || gameBoard[row][col] == 44 ||
		gameBoard[row][col] == 55) {

		e.style.background = 'red';
		/* Set this square to 2 to indicate HIT */
		gameBoard[row][col] = 2;
		hitCount++;
		hitCountText.innerHTML = hitCount;
	}
}

